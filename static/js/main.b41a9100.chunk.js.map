{"version":3,"sources":["components/Navbar.js","components/Morse.js","components/AsciiDropdown.js","components/InputForm.js","App.js","index.js"],"names":["style","height","display","alignItems","justifyContent","Navbar","props","className","mode","backgroundColor","id","onClick","homeLink","document","querySelector","aboutLink","getElementById","classList","add","remove","title","type","toggleMode","htmlFor","defaultProps","Morse","AsciiDropdown","value","figlet","parseFont","threeD","threeDASCII","fiveLine","basic","doom","isometric1","larry3d","standard","starwars","univers","rozzo","roman","rectangles","slant","nancy","doh","binary","colossal","ghost","graffiti","buttonStyle","marginRight","marginBottom","InputForm","useState","text","setText","color","rows","onChange","e","preventDefault","target","disabled","length","inputText","select","navigator","clipboard","writeText","getSelection","removeAllRanges","newText","split","join","toUpperCase","toLowerCase","reverse","i","charAt","slice","download","blob","Blob","FileSaver","saveAs","morseText","map","frag","font","width","whitespaceBreak","err","data","console","log","filter","element","App","setMode","body","ReactDOM","render"],"mappings":"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","file":"static/js/main.b41a9100.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Navbar.css\"\r\n\r\nconst style = {\r\n    height:\"70px\", \r\n    display:\"flex\", \r\n    alignItems:\"center\", \r\n    justifyContent:\"center\"\r\n}\r\n\r\nfunction Navbar(props) {\r\n\r\n    const linkConvertio = () => {\r\n        let homeLink = document.querySelector('#homeLink');\r\n        let aboutLink = document.getElementById('aboutLink');\r\n        homeLink.classList.add('Link');\r\n        aboutLink.classList.remove('Link');\r\n        document.title = 'Home';\r\n    }\r\n    \r\n    const homeFunc = () => {\r\n        let homeLink = document.getElementById('homeLink');\r\n        let aboutLink = document.getElementById('aboutLink');\r\n        homeLink.classList.add('Link');\r\n        aboutLink.classList.remove('Link');\r\n        document.title = `Home`;\r\n    }\r\n    \r\n    const aboutFunc = () => {\r\n        let homeLink = document.getElementById('homeLink');\r\n        let aboutLink = document.getElementById('aboutLink');\r\n        homeLink.classList.remove('Link');\r\n        aboutLink.classList.add('Link');\r\n        document.title = `About`;\r\n    }\r\n\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode}`} style={{backgroundColor: props.mode==='dark'? 'rgb(30, 30, 30)' : 'rgb(200, 200, 200)'}}>\r\n            <div className=\"container\">\r\n                <span id=\"linkConvertio\" onClick={linkConvertio} style={style} className=\"navbar-brand point\"> &nbsp;{props.title} &nbsp;</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <span id=\"homeLink\" onClick={homeFunc} className=\"nav-link active point\" aria-current=\"page\"> &nbsp; Home &nbsp; </span>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <span id=\"aboutLink\" onClick={aboutFunc} className=\"nav-link active point\" aria-current=\"page\"> &nbsp; About &nbsp; </span>\r\n                        </li>\r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"lightDark\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"lightDark\">Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Add a title',\r\n}","const Morse = {\r\n    'a': '.-',\r\n    'b': '-...',\r\n    'c': '-.-.',\r\n    'd': '-..',\r\n    'e': '.',\r\n    'f': '..-.',\r\n    'g': '--.',\r\n    'h': '....',\r\n    'i': '..',\r\n    'j': '.---',\r\n    'k': '-.-',\r\n    'l': '.-..',\r\n    'm': '--',\r\n    'n': '-.',\r\n    'o': '---',\r\n    'p': '.--.',\r\n    'q': '--.-',\r\n    'r': '.-.',\r\n    's': '...',\r\n    't': '-',\r\n    'u': '..-',\r\n    'v': '...-',\r\n    'w': '.--',\r\n    'x': '-..-',\r\n    'y': '-.--',\r\n    'z': '--..',\r\n    '1': '.----',\r\n    '2': '..---',\r\n    '3': '...--',\r\n    '4': '....-',\r\n    '5': '.....',\r\n    '6': '-....',\r\n    '7': '--...',\r\n    '8': '---..',\r\n    '9': '----.',\r\n    '0': '-----',\r\n    '.': '.-.-.-',\r\n    ',': '--..--',\r\n    '?': '..--..',\r\n    \"'\": '.----.',\r\n    '!': '-.-.--',\r\n    '/': '-..-.',\r\n    '(': '-.--.',\r\n    ')': '-.--.-',\r\n    '&': '.-...',\r\n    ':': '---...',\r\n    ';': '-.-.-.',\r\n    '=': '-...-',\r\n    '+': '.-.-.',\r\n    '-': '-....-',\r\n    '_': '..--.-',\r\n    '\"': '.-..-.',\r\n    '$': '...-..-',\r\n    '@': '.--.-.',\r\n    ' ': ' '\r\n}\r\n\r\nexport default Morse;\r\n","import React from 'react'\r\n\r\nfunction AsciiDropdown() {\r\n    return (\r\n        <div className=\"col-md-6\">\r\n            <h3 className='my-2'>ASCII text</h3>\r\n            <label htmlFor=\"ascii\" className=\"form-label\">Copy text or download as .txt for a better view</label>\r\n            <select className=\"form-select\" id=\"ascii\">\r\n                <option value=\"3-D\">3-D</option>\r\n                <option value=\"3D-ASCII\">3D-ASCII</option>\r\n                <option value=\"5 line Oblique\">5 Line Oblique</option>\r\n                <option value=\"Basic\">Basic</option>\r\n                <option value=\"Doom\">Doom</option>\r\n                <option value=\"Isometric1\">Isometric1</option>\r\n                <option value=\"Larry 3D\">Larry 3D</option>\r\n                <option value=\"Standard\">Standard</option>\r\n                <option value=\"Star Wars\">Star Wars</option>\r\n                <option value=\"Univers\">Univers</option>\r\n                <option value=\"Rozzo\">Rozzo</option>\r\n                <option value=\"Roman\">Roman</option>\r\n                <option value=\"Rectangles\">Rectangles</option>\r\n                <option value=\"Slant\">Slant</option>\r\n                <option value=\"Nancyj-Underlined\">Nancyj-Underlined</option>\r\n                <option value=\"Doh\">Doh</option>\r\n                <option value=\"Binary\">Binary</option>\r\n                <option value=\"Colossal\">Colossal</option>\r\n                <option value=\"Ghost\">Ghost</option>\r\n                <option value=\"Graffiti\">Graffiti</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AsciiDropdown\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport FileSaver from 'file-saver';\r\nimport Morse from './Morse';\r\nimport figlet from 'figlet';\r\nimport './WordErr.css';\r\n\r\nimport threeD from 'figlet/importable-fonts/3-D.js';\r\nimport threeDASCII from 'figlet/importable-fonts/3D-ASCII.js';\r\nimport fiveLine from 'figlet/importable-fonts/5 Line Oblique.js';\r\nimport basic from 'figlet/importable-fonts/Basic.js';\r\nimport doom from 'figlet/importable-fonts/Doom.js';\r\nimport isometric1 from 'figlet/importable-fonts/Isometric1.js';\r\nimport larry3d from 'figlet/importable-fonts/Larry 3D.js';\r\nimport standard from 'figlet/importable-fonts/Standard.js';\r\nimport starwars from 'figlet/importable-fonts/Star Wars.js';\r\nimport univers from 'figlet/importable-fonts/Univers.js';\r\nimport rozzo from 'figlet/importable-fonts/Rozzo.js';\r\nimport roman from 'figlet/importable-fonts/Roman.js';\r\nimport rectangles from 'figlet/importable-fonts/Rectangles.js';\r\nimport slant from 'figlet/importable-fonts/Slant.js';\r\nimport nancy from 'figlet/importable-fonts/Nancyj-Underlined.js';\r\nimport doh from 'figlet/importable-fonts/Doh.js';\r\nimport binary from 'figlet/importable-fonts/Binary.js';\r\nimport colossal from 'figlet/importable-fonts/Colossal.js';\r\nimport ghost from 'figlet/importable-fonts/Ghost.js';\r\nimport graffiti from 'figlet/importable-fonts/Graffiti.js';\r\n\r\nimport \"./InputForm.css\"\r\nimport AsciiDropdown from './AsciiDropdown';\r\n\r\nfiglet.parseFont('3-D', threeD);\r\nfiglet.parseFont('3D-ASCII', threeDASCII);\r\nfiglet.parseFont('5 Line Oblique', fiveLine);\r\nfiglet.parseFont('Basic', basic);\r\nfiglet.parseFont('Doom', doom);\r\nfiglet.parseFont('Isometric1', isometric1);\r\nfiglet.parseFont('Larry 3D', larry3d);\r\nfiglet.parseFont('Standard', standard);\r\nfiglet.parseFont('Star Wars', starwars);\r\nfiglet.parseFont('Univers', univers);\r\nfiglet.parseFont('Rozzo', rozzo);\r\nfiglet.parseFont('Roman', roman);\r\nfiglet.parseFont('Rectangles', rectangles);\r\nfiglet.parseFont('Slant', slant);\r\nfiglet.parseFont('Nancyj-Underlined', nancy);\r\nfiglet.parseFont('Doh', doh);\r\nfiglet.parseFont('Binary', binary);\r\nfiglet.parseFont('Colossal', colossal);\r\nfiglet.parseFont('Ghost', ghost);\r\nfiglet.parseFont('Graffiti', graffiti);\r\n\r\nconst buttonStyle = {\r\n    marginRight: \"7px\",\r\n    marginBottom: \"7px\",\r\n}\r\n\r\nfunction InputForm(props) {\r\n\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const handleOnChange = (e) => {\r\n        e.preventDefault();\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const handleUp = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        document.title = 'UPPER CASED';\r\n        document.getElementById('nono').classList.remove('words');\r\n    }\r\n\r\n    const handleLow = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        document.title = 'lower cased';\r\n        document.getElementById('nono').classList.remove('words');\r\n    }\r\n\r\n    const handleClear = () => {\r\n        setText(\"\");\r\n        document.title = 'Cleared';\r\n        document.getElementById('nono').classList.remove('words');\r\n        document.title = `cleared`;\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        let inputText = document.getElementById(\"inputText\");\r\n        inputText.select();\r\n        navigator.clipboard.writeText(inputText.value);\r\n        document.getSelection().removeAllRanges();\r\n        document.title = `copied`;\r\n    }\r\n\r\n    const handleSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        document.title = 'Woosh';\r\n        document.getElementById('nono').classList.add('words');\r\n    }\r\n\r\n    const handleDownload = () => {\r\n        let download = document.getElementById('inputText').value;\r\n        let blob = new Blob([download], {type: \"text/plain; charset=utf-8\"});\r\n        FileSaver.saveAs(blob, \"textConvertio.txt\");\r\n        document.title = 'Downloaded';\r\n    }\r\n\r\n    const handleReverse = () => {\r\n        let newText = text.split(\"\").reverse().join(\"\");\r\n        setText(newText);\r\n        document.title = 'Reverse cased';\r\n        document.getElementById('nono').classList.remove('words');\r\n    }\r\n\r\n    const handleTitle = () => {\r\n        let newText = text.toLowerCase().split(\" \");\r\n        for(let i=0; i < newText.length; i++) {\r\n            newText[i] = newText[i].charAt(0).toUpperCase() + newText[i].slice(1);\r\n        }\r\n        setText(newText.join(\" \"));\r\n        document.title = 'Title Cased';\r\n        document.getElementById('nono').classList.remove('words');\r\n    }\r\n\r\n    const handleEncodeMorse = () => {\r\n        let morseText = text.toLowerCase()\r\n                            .split(\"\")\r\n                            .map(frag => {\r\n                                return Morse[frag] ? Morse[frag] : frag; \r\n                            }).join(\"\");\r\n        setText(morseText);\r\n        document.title = `Morse Enc`;\r\n        document.getElementById('nono').classList.add('words');\r\n    }\r\n\r\n    const handleASCII = (e) => {\r\n        e.preventDefault();\r\n        let font = document.querySelector('#ascii').value;\r\n        figlet.text(text, {\r\n            font: font,\r\n            width: 200,\r\n            whitespaceBreak: true\r\n        }, function(err, data) {\r\n            if(err){\r\n                console.log(err)\r\n            }\r\n            setText(data);\r\n        });\r\n        document.title = `${font} - ASCII`;\r\n        document.getElementById('nono').classList.add('words');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\" style={{color: props.mode==='dark'? 'white' : 'black'}}>\r\n                <div className=\"mb-4\">\r\n                    <br />\r\n                    <h2>{props.title}</h2>\r\n                    <br />\r\n                    <textarea \r\n                        style={\r\n                            {backgroundColor: props.mode === 'light' ? 'white' : 'black',\r\n                            color: props.mode==='dark'? 'white' : 'black',         \r\n                            }\r\n                        }\r\n                        className=\"form-control\" \r\n                        id=\"inputText\"\r\n                        value={text}\r\n                        rows=\"8\"\r\n                        onChange= {handleOnChange}>\r\n                    </textarea>\r\n                </div>\r\n                <button disabled={text.length === 0} onClick={handleClear} style={buttonStyle} className=\"btn btn-danger\">Clear Field</button>\r\n                <button disabled={text.length === 0} onClick={handleCopy} style={buttonStyle} className=\"btn btn-primary\">Copy Text</button>\r\n                <button disabled={text.length === 0} onClick={handleSpaces} style={buttonStyle} className=\"btn btn-primary\">Trim spaces</button>\r\n                <br />\r\n                <button disabled={text.length === 0} onClick={handleUp} style={buttonStyle} className=\"btn btn-dark\">UPPER CASE</button>\r\n                <button disabled={text.length === 0} onClick={handleLow}style={buttonStyle} className=\"btn btn-dark\">lower case</button>\r\n                <button disabled={text.length === 0} onClick={handleReverse} style={buttonStyle} className=\"btn btn-dark\">esac esreveR</button>\r\n                <button disabled={text.length === 0} onClick={handleTitle} style={buttonStyle} className=\"btn btn-dark\">Title Case</button>\r\n                <br />\r\n                <button disabled={text.length === 0} onClick={handleDownload} style={buttonStyle} className=\"btn btn-primary\">Download as.txt</button>\r\n                <button disabled={text.length === 0} onClick={handleEncodeMorse} style={buttonStyle} className=\"btn btn-dark\">Morse</button>\r\n                <form className=\"row g-3\" id=\"noteDetails\">\r\n                    <AsciiDropdown/>\r\n                    <div className=\"col-md-3 buttonAlign\">\r\n                    <button disabled={text.length === 0} onClick={handleASCII} className=\"btn btn-dark\">ASCII</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"container my-4\" style={{color: props.mode==='dark'? 'white' : 'black'}}>\r\n                <h3>Text Stats</h3>\r\n                <hr />\r\n                <h5 id='nono'>Words: {text.split(/\\s+/).filter((element) => {return element.length!==0}).length}</h5>\r\n                <h5>Characters: {text.length} </h5>\r\n                <br />\r\n                <h3>Preview</h3>\r\n                <hr />\r\n                <pre>{text.length > 0 ? text : 'Type something to preview'}</pre>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputForm\r\n\r\nInputForm.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}","import React, {useState} from 'react';\nimport Navbar from './components/Navbar';\nimport InputForm from './components/InputForm';\n// import About from './components/About';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n\n  const toggleMode = () => {\n    if(mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n\n  return (\n    <div>\n      <Navbar title=\"textConvertio\" mode={mode} toggleMode={toggleMode}/>\n      <InputForm title=\"Enter your text here\" mode={mode}/>\n      {/* <About mode={mode}/> */}\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}